# SPDX-FileCopyrightText: Copyright 2023 Prasad Tengse
# SPDX-License-Identifier: MIT

version: "3"

tasks:
  default:
    desc: "Show a list of available tasks"
    cmds:
      - cmd: task --list
        silent: true
  go:bench-pkg-internal:
    desc: "Benchmark single package and output results to a file"
    internal: true
    requires:
      vars:
        - GO_BENCH_COUNT
        - GO_BENCH_PKG
        - GO_BENCH_NAME
        - GO_BENCH_OUTPUT_FIE
        - GO_BENCH_TIMEOUT
    cmds:
      - cmd: |
          go test -benchmem \
            -run=^$ -count={{.GO_BENCH_COUNT}} \
            -timeout={{.GO_BENCH_TIMEOUT}} \
            -bench="{{.GO_BENCH_NAME}}" \
            {{.GO_BENCH_PKG}} | tee "{{.GO_BENCH_OUTPUT_FIE}}"
        platforms:
          - linux
          - darwin
          - freebsd
          - netbsd
          - dragonfly
          - openbsd
      - cmd: |
          powershell.exe -NonInteractive -NoProfile -NoLogo -Command 'go test -benchmem -run="^$" -count={{.GO_BENCH_COUNT}} -timeout={{.GO_BENCH_TIMEOUT}} -bench="{{.GO_BENCH_NAME}}" {{.GO_BENCH_PKG}} | Tee-Object "{{.GO_BENCH_OUTPUT_FIE}}"'
        platforms:
          - windows
  go:test-pkg-internal:
    desc: "Test single go package (internal)"
    internal: true
    requires:
      vars:
        - GO_TEST_PKG
        - GO_TEST_TIMEOUT
    cmds:
      - cmd: go test -cover -timeout={{.GO_TEST_TIMEOUT}} {{.GO_TEST_PKG}}

  go:test-all-short:
    desc: "Test all go packages (short mode)"
    aliases:
      - "test-all-short"
    cmds:
      - cmd: go test -cover -timeout=1m -short ./...

  go:test-all:
    desc: "Test all go packages"
    aliases:
      - "test-all"
    cmds:
      - cmd: go test -cover -timeout=2m ./...

  go:test-go-githubapp-integration:
    desc: "Test all go packages"
    aliases:
      - "test-integration"
      - "e2e"
    cmds:
      - cmd: go test -cover -timeout=2m -run ^TestIntegration -v github.com/tprasadtp/go-githubapp

  go:test-go-githubapp:
    desc: "Test all go packages"
    aliases:
      - "test-go-githubapp"
    cmds:
      - cmd: go test -cover -timeout=1m -short -v github.com/tprasadtp/go-githubapp

  pulumi:test-infra-up:
    desc: "Create/Update test infra"
    env:
      PULUMI_CONFIG_PASSPHRASE: ""
      GITHUB_OWNER: "gh-integration-tests"
    requires:
      vars:
        - GITHUB_OWNER
        - GITHUB_TOKEN
    dir: internal/testinfra
    cmds:
      - cmd: pulumi up
